<ebnf>
	<grammar>
		<prod>
		    <lhs>lowercase_identifier</lhs>
		    <rhs>
		    	<token regexp="^[a-z]+"/>
		    </rhs>
		</prod>
		<prod>
		    <lhs>NameStartChar</lhs>
		    <rhs whitespace="explicit">
		    	<token regexp="^[A-Z]|^_|^[a-z]|^[&#xC0;-&#xD6;]|^[&#xD8;-&#xF6;]|^[&#xF8;-&#x2FF;]|^[&#x370;-&#x37D;]|^[&#x37F;-&#x1FFF;]|^[&#x200C;-&#x200D;]|^[&#x2070;-&#x218F;]|^[&#x2C00;-&#x2FEF;]|^[&#x3001;-&#xD7FF;]|^[&#xF900;-&#xFDCF;]|^[&#xFDF0;-&#xFFFD;]|^[&#x10000;-&#xEFFFF;]" />
		    </rhs>
		</prod>
		<prod>
		    <lhs>AdditionalNameChar</lhs>
		    <rhs whitespace="explicit">
		    	<token regexp="^-|^\.|^[0-9]|^&#xB7;|^[&#x0300;-&#x036F;]|^[&#x203F;-&#x2040;]"/>
		    </rhs>
		</prod>
		<prod>
		    <lhs>Char</lhs>
		    <rhs>
		    	<token regexp="^&#x9;|^&#xA;|^&#xD;|^[&#x20;-&#xD7FF;]|^[&#xE000;-&#xFFFD;]|^[&#x10000;-&#x10FFFF;]"/>
		    </rhs>
		</prod>
		<prod>
		    <lhs>CharCode</lhs>
		    <rhs>
		    	<token regexp="^#x[0-9a-fA-F]+"/>
		    </rhs>
		</prod>
		<prod>
		    <lhs>S</lhs>
		    <rhs>
		    	<token regexp="^&#x9;|^&#xA;|^&#xD;|^&#x20;" />
		    	        /* #x9 is TAB    */
				        /* #xA is LF     */
				        /* #xD is CR     */
				        /* #x20 is SPACE */
		    </rhs>
		</prod>
		<prod>
		    <lhs>NonNegativeNumber</lhs>
		    <rhs>
		    	<token regexp="^[0-9]+"/>
		    </rhs>
		</prod>
		<prod>
			<lhs>OtherNameChar</lhs>
		    <rhs>  
	       	    <or>
	       	  	<nt>NameStartChar</nt> 
		       	<nt>AdditionalNameChar</nt>
		       </or>
		    </rhs>
		</prod>
		<prod>
			<lhs>Name</lhs>
		    <rhs >
		    	<sequence>
		       	  	<nt>NameStartChar</nt> 
			       	<ZeroOneOrMore>
			       	   <nt>OtherNameChar</nt>  
			       	</ZeroOneOrMore>
		       </sequence>
		    </rhs>
		</prod>
	    <prod>
		    <lhs>Expr</lhs>
		    <rhs>
		      	<or>
		        	<nt>IfExpr</nt>
		        	<nt>AdditiveExpr</nt>
		     	</or>
	    	</rhs>
	    </prod>
      	<prod>
		    <lhs>IfExpr</lhs>  
	      	<rhs>
	      		<sequence>
					<nt>IfPart</nt>
					<nt>ThenPart</nt>
					<nt>ElsePart</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>IfPart</lhs>  
	      	<rhs>
	      		<sequence>
		      		<literal>if</literal>
					<nt>Expr</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>ThenPart</lhs>  
	      	<rhs>
	      		<sequence>
		      		<literal>then</literal>
					<nt>Expr</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>ElsePart</lhs>  
	      	<rhs>
	      		<sequence>
		      		<literal>else</literal>
					<nt>Expr</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>AdditiveExpr</lhs>  
	      	<rhs>
	      		<sequence>
					<nt>PrimaryExpr</nt>
					<nt>AdditiveTail</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>AdditiveTail</lhs>  
	      	<rhs>
	      		<ZeroOneOrMore>
					<nt>AdditivePart</nt>
				</ZeroOneOrMore>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>AdditivePart</lhs>  
	      	<rhs>
	      		<sequence>
					<nt>AdditiveOperator</nt>
					<nt>PrimaryExpr</nt>
				</sequence>
	      	</rhs>
		</prod>
	    <prod>
		    <lhs>AdditiveOperator</lhs>
		    <rhs>
		      	<or>
		        	<nt>Add</nt>
		        	<nt>Subtract</nt>
		     	</or>
	    	</rhs>
	    </prod>
	    <prod>
		    <lhs>Add</lhs>  
	      	<rhs>
	      		<literal>+</literal>
	      	</rhs>
		</prod>
	    <prod>
		    <lhs>Subtract</lhs>  
	      	<rhs>
	      		<literal>-</literal>
	      	</rhs>
		</prod>
	    <prod>
		    <lhs>PrimaryExpr</lhs>
		    <rhs>
		      	<or>
		        	<nt>VarRef</nt>
		        	<nt>Literal</nt>
		     	</or>
	    	</rhs>
	    </prod>
		<prod>
		    <lhs>VarRef</lhs>  
	      	<rhs>
	      		<sequence>
		      		<literal>$</literal>
					<nt>Name</nt>
				</sequence>
	      	</rhs>
		</prod>
		<prod>
		    <lhs>Literal</lhs>  
	      	<rhs>
				<nt>NonNegativeNumber</nt>
	      	</rhs>
		</prod>
	</grammar>
<!--
	<testNonTerminal name="NonNegativeNumber">
		<testcase text="E"/>
		<testcase text="1"/>
		<testcase text="1x"/>
	</testNonTerminal>

	<testNonTerminal name="NonNegativeNumber">
		<testcase text="bc.def.ghi"/>
		<testcase text="1/2"/>
		<testcase text="10 + 20"/>
		<testcase text="0"/>
		<testcase text="          10 + 20 test kleading spaces"/>
		<testcase text="          0 test kleading spaces"/>
		<testcase text="          
			10 + 20              test leading newline"/>
		<testcase text="            
			0                    test leading newline"/>
	</testNonTerminal>
	<testNonTerminal name="Literal">
		<testcase text="bc.def.ghi"/>
		<testcase text="1/2"/>
		<testcase text="10 + 20"/>
		<testcase text="0"/>
		<testcase text="0xxx"/>
		<testcase text="		0 test leadin tab characters"/>
		<testcase text="		0xxx test leadin tab characters"/>
	</testNonTerminal>
	<testNonTerminal name="Name">
		<testcase text="a"/>
	    <testcase text="a."/>
	    <testcase text="ab ??????"/>
	</testNonTerminal>
	<testNonTerminal name="VarRef">
		<testcase text="a"/>
		<testcase text="a."/>
		<testcase text="bc.def.ghi"/>
		<testcase text="$x"/>
		<testcase text=" $x leading space"/>
		<testcase text="$xyz"/>
		<testcase text="$xyz_5"/>
		<testcase text="$"/>
		<testcase text="0"/>
	</testNonTerminal>
	<testNonTerminal name="AdditiveOperator">
		<testcase text="bc.def.ghi"/>
		<testcase text="$xyz"/>
		<testcase text="$"/>
		<testcase text="0"/>
		<testcase text="+"/>
		<testcase text="+xxx"/>
		<testcase text="-"/>
		<testcase text="-$x ???"/>
	</testNonTerminal>
	<testNonTerminal name="PrimaryExpr">
		<testcase text="bc.def.ghi"/>
		<testcase text="$bc.def.ghi"/>
		<testcase text=" $x  leading space"/>
		<testcase text="$xyz"/>
		<testcase text="$xyz ????/"/>
		<testcase text="$"/>
		<testcase text="0"/>
		<testcase text="999"/>
		<testcase text="999 ????"/>
	</testNonTerminal>


	<testNonTerminal name="AdditivePart">
		<testcase text="bc.def.ghi35 - 856 "/>
		<testcase text="$xyz + 0"/>
		<testcase text="+x"/>
		<testcase text="-x"/>
		<testcase text="+$x"/>
		<testcase text="-$x"/>
		<testcase text="-$xx"/>
		<testcase text="-0"/>
		<testcase text="-0xxxxxx"/>
		<testcase text="+$x"/>
		<testcase text="-$x"/>
		<testcase text="- $x    separating space"/>
		<testcase text="	-$xx leading tab"/>
		<testcase text="     -0   leading spaces"/>
		<testcase text="
			-0xxxxxx leading newline"/>
	</testNonTerminal>

	
	<testNonTerminal name="AdditiveTail">
		<testcase text="+1+2"/>
		<testcase text="+$xx+$yy"/>
		<testcase text="+ $xx + $yy"/>
		<testcase text="+$xx-$yy"/>
		<testcase text="+$xx -$yy"/>
    </testNonTerminal>
-->
	<testNonTerminal name="Expr">
		<testcase text="0"/>
    </testNonTerminal>


	<testNonTerminal name="IfPart">
		<testcase text="bc.def.ghi35 - 856 "/>
		<testcase text="$xyz + 0"/>
		<testcase text="+x"/>
		<testcase text="-0 "/>
		<testcase text="if$x"/>
		<testcase text="if"/>
		<testcase text="if0"/>
		<testcase text="+xx"/>
		<testcase text="-0 "/>
		<testcase text="if$xx"/>
		<testcase text="if"/>
		<testcase text="if0"/>
		<testcase text="if $x"/>
		<testcase text="if"/>
		<testcase text="if 0"/>
		<testcase text="if $xx"/>
		<testcase text="if"/>
		<testcase text="if 0"/>
		<testcase text=" if 0 leading space"/>
	</testNonTerminal>

	<testNonTerminal name="ThenPart">
			<testcase text="then 0"/>
		<testcase text="then $xx"/>
		<testcase text="then"/>
		<testcase text="then 0"/>
		<testcase text=" then 0 leading space"/>
	</testNonTerminal>
		<testNonTerminal name="ElsePart">
			<testcase text="else 0"/>
		<testcase text="else $xx"/>
		<testcase text="else"/>
		<testcase text="else 0"/>
		<testcase text=" else 0 leading space"/>
	</testNonTerminal>
	<testNonTerminal name="Expr">
		<testcase text="0"/>
		<testcase text="$xx"/>
		<testcase text="bc.def.ghi35 - 856 "/>
		<testcase text="$xyz + 0"/>
		<testcase text="+x"/>
		<testcase text="-0 "/>
		<testcase text="if$x"/>
		<testcase text="if"/>
		<testcase text="if0"/>
		<testcase text="if$xthen$yelse$z ??????????"/>
		<testcase text="$x+$y-$z ??????????"/>
		<testcase text="if$xy"/>
		<testcase text="if"/>
		<testcase text="if0"/>
		<testcase text="if 0 then 1 else 2 ????"/>
		<testcase text="if$xx then$yy else$zx ??????????"/>
		<testcase text="if $xx then $yy else $zx ??????????"/>
		<testcase text="$xx +$yy -$zz ??????????"/>
	</testNonTerminal>


</ebnf>
