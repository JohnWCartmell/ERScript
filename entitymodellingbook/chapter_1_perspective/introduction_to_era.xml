<holder>

<subsection>
<title>Entities</title>
<para>The word `entity' as it is used in this book is used in its most general sense,  the sense in which it just means `thing'. The entities that are being modelled in entity modelling can be just any old 'things' at all --- and so we could just as well speak of `modelling things' as `entity modelling' but that the term entity modelling
has come to mean a particular way of modelling things in which things are described by describing their types and the types of relationships between them.
</para>

<para> There is a proviso to this. We do not set out to model types whose instances are all known from the beginning (though these types are available and relevant). Rather we set out to model types whose instances (things) are open-ended and may vary from context to context. These are the subject entity types within an entity model. The whole entity model is expected to be realised in many contexts and the instances of any given subject type are expected to vary from context to context.
</para>
<para>
Conversely, things that are known from the beginning and unchanging from one context to another, things that can be said to be `universal' are excluded from being subjects of our modelling. We do not model, therefore, whole nunbers, nor real nunbers, nor truth values (booleans) but take these as universal givens and, generally, we do not model language characters and language character sequences (strings) with all the richness that this would require and we take these too to be universal and given. 
</para>
<para>
In philosophy the non-universal things that are our entitites are referred to as particulars and so we can say that subject entity types within an entity model represent types of things all of whose instances are particulars. 
</para>
<para>
Though entity modelling may be about just about any thing it is never about modelling everything.
An entity model serves to describe a domain of discourse. In the general case it describes the entities in this domain in relation not just to each other but to other given types which are types which serve to represent that which is universal. 
</para>
</subsection>
<subsection>
  <title>Relationships</title>
</subsection>
<subsection>
  <title>Attributes</title>
</subsection>
<subsection>
  <title>Entity Models</title>
</subsection>
<subsection>
  <title>moved in</title>
  <para><footnote>Find a different place for this</footnote>
    There are some differences of notation and concept between different authors and a range of different diagram styles for representing the three principle components of entity type(E), relationship (R) and attribute (A). The E R A terms themselves were introduced in a very influential paper by  Chen in 1976.<footnote>
      <bibentry>Chen1976</bibentry>
    </footnote> I come back to this in a later section but here we use and promote a  style of diagram that is different to Chen's. Most notably we do not use diamond 
    shaped boxes in the representation of relationships and even what we mean by the term relationship is significantly shifted. The style we use evolved in the past from Chen's style and is a further evolution from that found in 
    SSADM<footnote>
            <bibentry>SSADM</bibentry>
          </footnote> 
   and in the Barker book.<footnote>
            <bibentry>RichardBarkerBook</bibentry>
          </footnote>      
   </para>
   <para>
    ER diagrams and ERA diagrams, whatever the style, are the first point of contact and the recongisable face of entity modelling but it is in the definitions behind such diagrams that
    lie the fundamentals and it is from these definitions that code in the form of database schemas, language-specific data specifications and data access and management code is compiled.  
    Though the definitions are definitions of types and collectively form a system of types, i.e.  the subject entity model, they are themselves in turn instances of other types which collectively form a higher level system of types which is said to be the (entity modelling) meta-model. 
    The entity modelling meta-model is presented in section       
    <refsection>
      <label>
        <chapter>???</chapter>
        <section>metamodel</section>
      </label>
      <title>ER MetaModel</title>
    </refsection> and one way to navigate this book for a reader already familiar with  basic ER notation to is to start from this meta-model. <footnote>end of required displacement</footnote>
   </para>
  </subsection>

</holder>
