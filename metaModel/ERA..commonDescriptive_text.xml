<?xml version="1.0" encoding="UTF-8"?>
<entity_model xmlns="http://www.entitymodelling.org/ERmodel"
               xmlns:era="http://www.entitymodelling.org/ERmodel">

   <absolute>
      <name>entity_model</name>
      <description> This is a meta-model --- it is an entity model which describes the structure of a typical entity model --- as such  this entity model is self-descriptive. </description>
      <composition>
         <type>entity_type</type>
         <description></description>
      </composition>
      <composition>
         <type>absolute</type>
         <description></description>
      </composition>
   </absolute>
   <entity_type>
      <name>ENTITY_TYPE</name>
      <description>A generalisation of the types absolute and entity_type.</description>
      <entity_type>
         <name>absolute</name>
         <description>An entity type which is defined to have a single instance which is the structural root of instances of this 
         entity model.</description>
      </entity_type>
      <entity_type>
         <name>entity_type</name>
         <description>Instances of this type are entity types in the subject entity model. 
            Each entity type describes a class of entities by describing the relationships that they participate in and the
            properties that may be attributed to them.</description>
         <composition>
            <type>entity_type</type>
            <description>The subtypes of a type. </description>
         </composition>
      </entity_type>
      <attribute>
         <name>name</name>
         <description>An attribute of type string  that uniquely identifies an entity type within an entity model.
            The name of absolute is the name of the whole and is therefore a name for the entire entity model.</description>
      </attribute>
      <attribute>
         <name>description</name>
         <description>Text documenting the meaning of the entity type.</description>
      </attribute>

      <composition>
         <type>Relationship</type>
         <description>The set of outgoing relationships from an entity type.</description>
      </composition>
      <composition>
         <type>attribute</type>
         <description>The set of attributes of an entity type. </description>
      </composition>
   </entity_type>
   <entity_type>
      <name>attribute</name>
      <description>A part of the structure of an entity type. An attribute is a named property that may be attributed 
         to entitites of the type. Often thought of as a slot within an entity which may be filled in with a value.
         Dates, numeric values, names, text descriptions, colour and truth values (booleans) only make sense 
         as the values of attributes of entities. Attributes may be core attributes or may be derived from other values.
         In a physical representation, attributes may be present simply to implement relationships. 
      </description>
      <dependency>
         <name>..</name>
         <type>ENTITY_TYPE</type>
         <description>.</description>
      </dependency>
      <composition>
         <type>implementationOf</type>
         <description>If this is defined then the attribute is one that is only present in a physical entity model
                      and is present to implement a particular relationship out from the entity type.
         </description>
      </composition>
      <composition>
         <name>type</name>
         <type>value_type</type>
         <description>The type of the value of the attribute.</description>
      </composition>
      <composition>
         <type>identifying(2)</type>
         <description>
            <p>
              If this is defined then it signifies that the attribute is one of a set of identifying attributes 
              of the entity type.
           </p>
            <p> 
              An identifying attribute in a physical model is a part of the primary key.
           </p>
         </description>
      </composition>
      <composition>
         <type>optional</type>
         <description>If defined then the attribute is optional.</description>
      </composition>
      <attribute>
         <name>name</name>
         <description>The name of the attrbute.</description>
      </attribute>
      <attribute>
         <name>description</name>
         <description>A textual description of the atttribute.</description>
      </attribute>
   </entity_type>

   <entity_type>
      <name>Relationship</name>
      <description>A generalisation of the types reference, dependency, constructed_relationship and composition.</description>
      <dependency>
         <name>..</name>
         <type>ENTITY_TYPE</type>
         <description>.</description>
      </dependency>
      <entity_type>
         <name>reference_or_dependency</name>
         <description>A generalisation of the types dependency and reference.</description>
         <entity_type>
            <name>dependency</name>
            <description>
                <p>
                  A dependency is a certain type of relationship. It is an inverse of a composition relationship
                  and therefore at the instance level relates an entity to the context in which it appears i.e. to a parent entity
                  or to the absolute. 
                </p>
             </description>
            <reference>
               <name>inverse_of</name>
               <type>composition</type>
               <description>
                  <p>
                     Relates a dependency to the composition relationship that it is an inverse of.
                  </p>
               </description>
            </reference>
         </entity_type>
         <entity_type>
            <name>reference</name>
            <description>
               <p>
                  A reference relationship is a binary relationship considered directionally as a relationship between entities of one type and entities of a second not necessarily distinct type  and represented as a feature
                  of the first type.
                  A reference relationship is such a binary relationship which is not classified 
                  as a composition relationship nor as a dependency and which, in a well-formed model at least, 
                  has an extent which cannot be inferred from the extents of the other primitive relationships in the model. 
               </p>
               <p>
                  To every reference relationship there is an inverse reference relationship.
               </p>
            </description>
            <reference>
               <name>inverse</name>
               <type>reference</type>
               <description>
                  <p>
                     Relates a dependency to the reference relationship that is its inverse.
                  </p>
               </description>
            </reference>
            <composition>
               <name>diagonal</name>
               <type>navigation</type>
               <description>.</description>
            </composition>
            <composition>
               <name>riser</name>
               <type>navigation</type>
               <description>.</description>
            </composition>
         </entity_type>
      </entity_type>
      <entity_type>
         <name>constructed_relationship</name>
         <description>A binary relationship between entities that can be derived from other more primitive relationships. </description>
         <reference>
            <name>inverse</name>
            <type>constructed_relationship</type>
            <description>.</description>
         </reference>
         <composition>
            <type>navigation</type>
            <description>.</description>
         </composition>
      </entity_type>
      <entity_type>
         <name>composition</name>
         <description>A relationship between entities in which entitites on one side of the relationship may be said to be in part composed of entitites on the other side.</description>
         <reference>
            <name>inverse</name>
            <type>dependency</type>
            <description>.</description>
         </reference>
      </entity_type>
      <reference>
         <name>type</name>
         <type>ENTITY_TYPE</type>
         <description>.</description>
      </reference>
      <composition>
         <type>sequence</type>
         <description>.</description>
      </composition>
      <composition>
         <type>identifying(1)</type>
         <description>.</description>
      </composition>
      <composition>
         <name>cardinality</name>
         <type>cardinality</type>
         <description>.</description>
      </composition>
      <attribute>
         <name>name</name>
         <description>An attribute of typestring.</description>
      </attribute>
      <attribute>
         <name>description</name>
         <description>An attribute of typestring.</description>
      </attribute>
      <attribute>
         <name>id</name>
         <description>An attribute of typestring.</description>
      </attribute>


   </entity_type>
   <entity_type>
      <name>sequence</name>
      <description>An entity type..</description>
   </entity_type>

      <entity_type>
         <name>identifying(1)</name>
         <description>An entity type..</description>
      </entity_type>
      <entity_type>
         <name>cardinality</name>
         <description>A generalisation of the types ZeroOrOne, ExactlyOne, ZeroOneOrMore and OneOrMore..</description>
         <entity_type>
            <name>ZeroOrOne</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>ExactlyOne</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>ZeroOneOrMore</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>OneOrMore</name>
            <description>An entity type..</description>
         </entity_type>
      </entity_type>

      

   <entity_type>
      <name>navigation</name>
      <description>A generalisation of the types complex and component..</description>

      <entity_type>
         <name>complex</name>
         <description>A generalisation of the types join and aggregate..</description>
         <composition>
            <type>component</type>
            <description>A step along a relationship which is either the whole of or a part of a navigation.</description>
         </composition>
         <entity_type>
            <name>join</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>aggregate</name>
            <description>An entity type..</description>
         </entity_type>
      </entity_type>
      <entity_type>
         <name>component</name>
         <description>An entity type..</description>
         <reference>
            <name>rel</name>
            <type>Relationship</type>
            <description>The relationship along hich a step is taken.</description>
         </reference>
      </entity_type>
      <entity_type>
         <name>component</name>
         <description>An entity type..</description>
         <reference>
            <name>relSrc</name>
            <type>ENTITY_TYPE</type>
            <description>The source entity type of the 'rel' relationship.</description>
         </reference>
      </entity_type>
      <entity_type>
         <name>auxiliary_scope_constraint</name>
         <description>
            <p>
             If present this specifies a constraint on the extent of a subject relationship  additional to any other scope constraint that may  be specified for it. 
             Like a principle scope constraint its presence obviates 
             the need for one or more attributes which would  otherwise be required for the implementation of the subject relationship.
            </p>
            <p>
               As can also be said of a principle scope constraint, it specifies a condition holding between  relationships of the model which in the  language of category theory can be expressed as the commutativity of a diagram of relationships.
            </p>
         </description>
      </entity_type>
         <entity_type>
            <name>identity</name>
            <description>
                The identity navigation.
        </description>
         </entity_type>
         <entity_type>
            <name>theabsolute</name>
            <description>
                A navigation to the ansolute.
        </description>
         </entity_type>
      <reference>
         <name>src</name>
         <type>ENTITY_TYPE</type>
         <description>.</description>
      </reference>
      <reference>
         <name>dest</name>
         <type>ENTITY_TYPE</type>
         <description>Introduced for potential use in better 
                           scoping of 'rel' relationship for which require 'previous' navigation.
                           Currently derived during enrichment.
      .</description>
      </reference>
   </entity_type>
      <entity_type>
         <name>implementationOf</name>
         <description>An entity type..</description>
         <dependency>
            <name>..</name>
            <type>attribute</type>
            <description>.</description>
         </dependency>
         <reference>
            <name>destAttr</name>
            <type>attribute</type>
            <description>This is an identifying attribute of the destination entity type of the relationship 'rel' which is being implemented. </description>
         </reference>
         <reference>
            <name>destAttrHostEt</name>
            <type>ENTITY_TYPE</type>
            <description>This the the host entity type of the attribute 'destAttr'.
            </description>
         </reference>
         <reference>
            <name>rel</name>
            <type>reference_or_dependency</type>
            <description>This is the reference relationship which is in whole or in part implemented by this foreign key attribute..</description>
         </reference>
      </entity_type>
      <entity_type>
         <name>value_type</name>
         <description>A generalisation of the types boolean, date, dateTime, integer, float, nonNegativeInteger, positiveInteger, string and time..</description>
         <entity_type>
            <name>boolean</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>date</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>dateTime</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>integer</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>float</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>nonNegativeInteger</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>positiveInteger</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>string</name>
            <description>An entity type..</description>
         </entity_type>
         <entity_type>
            <name>time</name>
            <description>An entity type..</description>
         </entity_type>
      </entity_type>
      <entity_type>
         <name>identifying(2)</name>
         <description>An entity type..</description>
      </entity_type>
      <entity_type>
         <name>optional</name>
         <description>An entity type..</description>
         <attribute>
            <name>value</name>
            <description>An attribute of typestring.</description>
         </attribute>
      </entity_type>
</entity_model>
